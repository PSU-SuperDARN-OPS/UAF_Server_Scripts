#!/bin/bash

# Script that downloads fitacf files from VT server
# and places the files in the correct RAID directory
# on the local UAF server

# Specify all files from $1=START_DATE to $2=END_DATE
# Default is all files from 30 days ago until today

# 2013 May 02
# Alex Morris

# Additional features that might be nice (to-do list):
# 1. Check time stamping of files (handle individual file updates on the VT server)
# 2. Better argument handling.  There is a better way.

# EXAMPLE:
# get_vt_data 20130216 20130218

TEMP_DIR="/home/ak_data/vt_data"
if [ ! -d $TEMP_DIR ]; then
  mkdir -p $TEMP_DIR
fi
SERVER="ak_data@sd-work9.ece.vt.edu"
if [ -z ${1} ]; then
  START_DATE=`date --date='-30 days' +"%Y%m%d"`
else
  START_DATE=$1
fi
if [ -z ${2} ]; then
  END_DATE=`date +"%Y%m%d"`
else
  END_DATE=$2
fi

d=${START_DATE}
arr_cnt=0
declare -a date_list=(${START_DATE})
while [ $d != $END_DATE ]; do
  arr_cnt=`expr $arr_cnt + 1`
  d=`date +"%Y%m%d" -d "$d + 1 day"`
  date_list[arr_cnt]=$d
done

echo "Finding files for all radars for the following dates:"
echo ${date_list[@]}

SY=${START_DATE:0:4}
EY=${END_DATE:0:4}

for date in ${date_list[@]}; do
  echo ${date}
  Y=${date:0:4}
  M=${date:4:2}
  D=${date:6:2}
  file_list=`ssh ${SERVER} ls "/sd-data/${Y}/fitacf/*/${date}*" 2>/dev/null`
  for file in $file_list; do
    fleaf=${file##*/}
    lfleaf=${fleaf%.bz2}
    LOCAL_PATH="/raid/SuperDARN/data/fit/${Y}/${M}.${D}"
    if [ ! -d "$LOCAL_PATH" ]; then
      if [ -f "$LOCAL_PATH" ]; then
        echo "Whoa, $LOCAL_PATH is a file, not a directory..."
        echo "This issue deserves further attention..."
        exit 0
      else
        echo "Local archive directory $LOCAL_PATH does not exist..."
        echo "Making local archive directory $LOCAL_PATH"
        mkdir -p ${LOCAL_PATH}
        chown :radar ${LOCAL_PATH}
        chmod g+wr ${LOCAL_PATH}

      fi
    fi
    # Check if file already exists in local directory.
    # if [ ! -s ${file}* ] is not robust
    # The stat method handles the case when more than one file matches
    # the glob expression, for instance when both a compressed and uncompressed file exist in the
    # archive.
    if stat -t ${LOCAL_PATH}/${lfleaf}* >/dev/null 2>&1; then
        continue
    else
        scp ${SERVER}:${file} ${TEMP_DIR}
        bunzip2 ${TEMP_DIR}/${fleaf}
        mv ${TEMP_DIR}/${lfleaf} ${LOCAL_PATH}
    fi
  done
done
rm ${TEMP_DIR}/* 2>/dev/null
